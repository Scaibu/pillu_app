<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AndroidLayouts">
    <shared>
      <config />
    </shared>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d4e4b3a5-1677-4a58-9736-cf1cf38abce5" name="Changes" comment="- minor ui is updated">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/auth/auth_api.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/auth/auth_api.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/auth/bloc/auth_bloc.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/auth/bloc/auth_bloc.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/auth/bloc/auth_event.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/auth/bloc/auth_event.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/auth/bloc/auth_state.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/auth/bloc/auth_state.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/chat/service/chat_service.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/chat/service/chat_service.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/chat/widget/drawer_header.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/chat/widget/drawer_header.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/chat/widget/drawer_list.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/chat/widget/drawer_list.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/chat/widget/login_view_component.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/chat/widget/login_view_component.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/explore/components/post_composer.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/explore/components/post_composer.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/explore/components/profile_image_component.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/explore/components/profile_image_component.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/explore/explore_view.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/explore/explore_view.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/friend/component/blocked_users_tab.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/friend/component/blocked_users_tab.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/friend/component/friend_requests_tab.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/friend/component/friend_requests_tab.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/friend/component/friends_tab.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/friend/component/friends_tab.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/friend/component/sent_requests_tab.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/friend/component/sent_requests_tab.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/friend/component/users_tab.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/friend/component/users_tab.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/profile/profile_view.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/profile/profile_view.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/shared/widgets/app_body.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/shared/widgets/app_body.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/shared/widgets/app_drawer_data.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/shared/widgets/app_drawer_data.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/util.dart" beforeDir="false" afterPath="$PROJECT_DIR$/lib/util.dart" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="main.dart" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/lib/main.dart">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="0">
              <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dart File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <excluded-from-favorite>
      <branch-storage>
        <map>
          <entry type="LOCAL">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$" source="main" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </excluded-from-favorite>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Chief-Strategist-J&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Scaibu/pillu_app.git&quot;,
    &quot;accountId&quot;: &quot;28a9ca7c-5212-4bd0-8429-2b2198588bf8&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2kyhJ6iZ903dtkIRci7yRJdrjbI" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1" />
    <panes>
      <pane id="ProjectPane">
        <option name="show-excluded-files" value="false" />
      </pane>
    </panes>
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Flutter.main.dart.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;io.flutter.reload.alreadyRun&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/j/live/pillu_app&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;,
    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib/friend/model/sentRequest" />
      <recent name="$PROJECT_DIR$/lib/friend/model/friendRequest" />
      <recent name="$PROJECT_DIR$/lib/friend/model/blockedUser" />
      <recent name="$PROJECT_DIR$/lib/friend" />
      <recent name="$PROJECT_DIR$/lib/friend/bloc" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d4e4b3a5-1677-4a58-9736-cf1cf38abce5" name="Changes" comment="" />
      <created>1724261648987</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1724261648987</updated>
    </task>
    <task id="LOCAL-00006" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1725292877850</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1725292877850</updated>
    </task>
    <task id="LOCAL-00007" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1725293736982</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1725293736982</updated>
    </task>
    <task id="LOCAL-00008" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1739599043808</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1739599043808</updated>
    </task>
    <task id="LOCAL-00009" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1739599060073</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1739599060073</updated>
    </task>
    <task id="LOCAL-00010" summary="- chat ui and code updated">
      <option name="closed" value="true" />
      <created>1739622726042</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1739622726042</updated>
    </task>
    <task id="LOCAL-00011" summary="- chat ui and code updated">
      <option name="closed" value="true" />
      <created>1739640612332</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1739640612332</updated>
    </task>
    <task id="LOCAL-00012" summary="- chat ui and code updated">
      <option name="closed" value="true" />
      <created>1739640631567</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1739640631567</updated>
    </task>
    <task id="LOCAL-00013" summary="- chat ui and code updated">
      <option name="closed" value="true" />
      <created>1740298051354</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1740298051354</updated>
    </task>
    <task id="LOCAL-00014" summary="- chat ui and code updated">
      <option name="closed" value="true" />
      <created>1740299316491</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1740299316491</updated>
    </task>
    <task id="LOCAL-00015" summary="- chat ui and code updated">
      <option name="closed" value="true" />
      <created>1740307887306</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1740307887306</updated>
    </task>
    <task id="LOCAL-00016" summary="- pillu user is added">
      <option name="closed" value="true" />
      <created>1740313427736</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1740313427736</updated>
    </task>
    <task id="LOCAL-00017" summary="- pillu user is added">
      <option name="closed" value="true" />
      <created>1740314090727</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1740314090727</updated>
    </task>
    <task id="LOCAL-00018" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740315321078</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1740315321078</updated>
    </task>
    <task id="LOCAL-00019" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740315338355</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1740315338355</updated>
    </task>
    <task id="LOCAL-00020" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740315677096</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1740315677096</updated>
    </task>
    <task id="LOCAL-00021" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740315755366</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1740315755366</updated>
    </task>
    <task id="LOCAL-00022" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740328495219</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1740328495219</updated>
    </task>
    <task id="LOCAL-00023" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740328575499</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1740328575499</updated>
    </task>
    <task id="LOCAL-00024" summary="- code refactor">
      <option name="closed" value="true" />
      <created>1740330038748</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1740330038748</updated>
    </task>
    <task id="LOCAL-00025" summary="- currently it stable and I can work with it now">
      <option name="closed" value="true" />
      <created>1740825669967</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1740825669967</updated>
    </task>
    <task id="LOCAL-00026" summary="- currently it stable and I can work with it now">
      <option name="closed" value="true" />
      <created>1740828608077</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1740828608077</updated>
    </task>
    <task id="LOCAL-00027" summary="- currently it stable and I can work with it now">
      <option name="closed" value="true" />
      <created>1740828629920</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1740828629920</updated>
    </task>
    <task id="LOCAL-00028" summary="- minor changes">
      <option name="closed" value="true" />
      <created>1740833015873</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1740833015873</updated>
    </task>
    <task id="LOCAL-00029" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740846432369</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1740846432369</updated>
    </task>
    <task id="LOCAL-00030" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740856857643</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1740856857643</updated>
    </task>
    <task id="LOCAL-00031" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740859190887</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1740859190887</updated>
    </task>
    <task id="LOCAL-00032" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740859907222</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1740859907222</updated>
    </task>
    <task id="LOCAL-00033" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740860627939</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1740860627939</updated>
    </task>
    <task id="LOCAL-00034" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740899625407</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1740899625407</updated>
    </task>
    <task id="LOCAL-00035" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740899649156</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1740899649156</updated>
    </task>
    <task id="LOCAL-00036" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1740900087450</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1740900087451</updated>
    </task>
    <task id="LOCAL-00037" summary="- final chat changes">
      <option name="closed" value="true" />
      <created>1741410943717</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1741410943717</updated>
    </task>
    <task id="LOCAL-00038" summary="- minar async and await is added">
      <option name="closed" value="true" />
      <created>1748403734595</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1748403734595</updated>
    </task>
    <task id="LOCAL-00039" summary="- gitignore is updated">
      <option name="closed" value="true" />
      <created>1748404168248</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1748404168248</updated>
    </task>
    <task id="LOCAL-00040" summary="fix(auth): safely cache and stream chat user updates with cancellation&#10;&#10;- Added in-memory caching for Firebase chat user to reduce delay in user retrieval&#10;- Listens to Firebase stream and updates both stream controller and auth state&#10;- Ensured add calls are only made when BLoC and controller are open&#10;- Subscribed to Firebase stream in a cancellable way to avoid leaks or crashes&#10;- Cancelled Firebase stream in BLoC close to maintain stability and prevent Bad state errors">
      <option name="closed" value="true" />
      <created>1748407267194</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1748407267194</updated>
    </task>
    <task id="LOCAL-00041" summary="add validation and account creation logic with password match enforcement&#10;&#10;- What the function/code does in simple terms:&#10;  This code handles user input validation for password fields and triggers account creation only if validations pass. It ensures the password and confirm password fields match, and prevents the user from proceeding otherwise.&#10;&#10;- A detailed step-by-step explanation of how it works:&#10;  1. `_passwordValidation` checks whether the password field is empty. If so, it returns an error message to prompt user input.&#10;  2. `_confirmPasswordValidation` checks whether the `password` and `confirmPassword` fields match. If they don't, it returns an error message to inform the user.&#10;  3. `signUpLogin` is the main method invoked to initiate account creation.&#10;     - It first uses the provided `formKey` to validate all form fields via `formKey.currentState!.validate()`. This ensures all associated `TextFormField` validators (such as `_passwordValidation`) are executed.&#10;     - If any validation fails, it exits early and prevents further actions.&#10;     - It then performs a direct comparison between `password.text` and `confirmPassword.text` again to redundantly confirm they match, even if validation already covered it.&#10;     - If the two fields do not match, a `toast` notification and `alertDialog` are both shown to the user to indicate the mismatch, and the function exits early.&#10;     - If all checks pass, it proceeds to call `_createChatUserAccount`, passing along user details for registration.&#10;&#10;- Important behavior or considerations:&#10;  - Uses synchronous field validation and asynchronous flow control.&#10;  - Double-checks password match both in form validation and in logic, adding redundancy for safety.&#10;  - Prevents account creation unless every validation passes.&#10;  - Provides user feedback using both toast and alert dialog in case of mismatch.&#10;  - Relies on `FormState.validate()` to integrate custom field-level checks.&#10;&#10;- What does it do?&#10;  It acts as a guard layer that ensures user input integrity before creating an account.&#10;&#10;- How step-by-step?&#10;  By using a combination of inline validators and procedural logic after form validation.&#10;&#10;- How each mechanism works?&#10;  - `formKey.currentState!.validate()` scans all field validators and ensures they return null (meaning valid).&#10;  - Text fields use `TextEditingController.text` to access user input.&#10;  - Redundant comparison in `signUpLogin` ensures defense-in-depth for password correctness.&#10;  - `_createChatUserAccount` is only called if all validation logic passes.&#10;&#10;- Why this design?&#10;  This structure modularizes field-specific validations and separates input checking from account registration, improving maintainability and clarity.&#10;&#10;- Why not alternatives?&#10;  - Could combine password match check into one location instead of repeating.&#10;  - Could introduce a reusable validator widget for consistent password validation logic.&#10;  - Could use form-level validation callback instead of embedding logic in `signUpLogin`.&#10;&#10;- Why is the task needed?&#10;  User account creation workflows require strict validation to ensure security and data consistency.&#10;&#10;- Why is the domain valuable?&#10;  Secure authentication flows are critical to any app managing user identity or access.&#10;&#10;- Meta-why: why is computation structured this way?&#10;  Structured this way to ensure stepwise validation (early exits on failure), centralized flow control (`signUpLogin`), and reusable validators. This separation of concerns reduces cognitive load and minimizes side effects across unrelated operations.&#10;&#10;- Could be loop-based instead of recursive.&#10;  Not applicable; there’s no recursion here.&#10;&#10;- Could use memoization if performance is a concern.&#10;  Not needed due to trivial computational cost; these are basic synchronous checks.&#10;&#10;- Could use tail-recursion if language optimizes it.&#10;  Not relevant; no recursion involved in any part of the logic.">
      <option name="closed" value="true" />
      <created>1748412245954</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1748412245954</updated>
    </task>
    <task id="LOCAL-00042" summary="- google firebase configuration is updated">
      <option name="closed" value="true" />
      <created>1748413573205</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1748413573205</updated>
    </task>
    <task id="LOCAL-00043" summary="add helper method to check if the given user is the message author&#10;&#10;- What the function/code does in simple terms:&#10;  Determines whether the provided user is the same as the message author.&#10;&#10;- How it works step-by-step:&#10;  1. Takes a user as input.&#10;  2. Compares the user's id with the message author's id.&#10;  3. Returns true if they match, false otherwise.&#10;&#10;- Could be loop-based instead of recursive:&#10;  Not applicable, this is a direct comparison.&#10;&#10;- Could use memoization if performance is a concern:&#10;  Unnecessary at this stage, as the check is simple and fast.&#10;&#10;- Could use tail-recursion if language optimizes it:&#10;  Not relevant; no recursion involved.">
      <option name="closed" value="true" />
      <created>1748415088139</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1748415088139</updated>
    </task>
    <task id="LOCAL-00044" summary="- added comment for this _isCurrentAuth">
      <option name="closed" value="true" />
      <created>1748415178865</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1748415178865</updated>
    </task>
    <task id="LOCAL-00045" summary="- add slide and fade transition for route navigation using custom page builder&#10;&#10;- What the function/code does in simple terms.&#10;  This function creates a new page route with a custom transition animation where the new screen slides in from the right while simultaneously fading in. It pushes the given widget onto the navigation stack.&#10;&#10;- A detailed step-by-step explanation of how it works. the how? how? how? how?how meta why&#10;&#10;  1. The function is declared as asynchronous and returns a Future&lt;void&gt;, indicating that it performs asynchronous work (in this case, waiting for navigation) but does not return a result.&#10;  &#10;  2. It receives two parameters:&#10;     - context: a BuildContext used to access the Navigator&#10;     - widget: the destination screen to be pushed&#10;&#10;  3. The function uses Navigator.of(context).push(...) to initiate navigation to a new page. Instead of using standard routes like MaterialPageRoute, it uses PageRouteBuilder for custom transitions.&#10;&#10;  4. PageRouteBuilder has two key components:&#10;     - pageBuilder: this defines which widget should be displayed as the new page. Here, it simply returns the provided widget. This builder also accepts animation and secondaryAnimation, but they are not used here for modifying the widget directly.&#10;     - transitionsBuilder: this defines the visual transition that should occur when switching from one screen to another.&#10;&#10;  5. Inside the transitionsBuilder:&#10;     - A slide animation is created using Tween&lt;Offset&gt;. The Tween defines a movement from Offset(0.5, 0), which is halfway to the right of the screen (X=0.5), to Offset.zero, which means the final position (X=0). This gives the effect of the widget sliding in from the right.&#10;     - This tween is animated using CurvedAnimation to apply easing (Curves.easeOut), which causes the animation to start quickly and slow down toward the end, providing a more natural movement.&#10;     - The same primary animation is also used directly for fade (opacity), providing a smooth fade-in effect as the widget appears.&#10;&#10;  6. Both animations are combined:&#10;     - The SlideTransition wraps the child (destination widget), applying the horizontal slide.&#10;     - Inside the SlideTransition, a FadeTransition applies the opacity animation. This nesting means the widget slides in while fading in at the same time.&#10;&#10;- Any important behavior or considerations (e.g., error handling, performance).&#10;&#10;  - Since PageRouteBuilder is used directly, it provides fine-grained control over animation but requires manual configuration.&#10;  - No exception handling is included; if called from an invalid context (e.g., context not mounted), it could throw errors.&#10;  - Transition performance is generally efficient, but heavy widgets might cause frame drops without appropriate optimization.&#10;  - This custom transition enhances user experience by making page changes feel smooth and intentional.&#10;  - The animation is hardcoded (e.g., slide from the right); changing direction or style requires manually adjusting the tween and animation curves.&#10;&#10;- What does it do? → How step-by-step? → How each mechanism works? →&#10;  - It pushes a new page with a custom route.&#10;  - The custom route uses a slide and fade transition.&#10;  - The slide comes from the right (Offset(0.5, 0)) using Tween + CurvedAnimation.&#10;  - The fade uses the same animation for opacity.&#10;  - These are applied using SlideTransition and FadeTransition widgets.&#10;  - The result is a smooth animated page transition controlled via PageRouteBuilder.">
      <option name="closed" value="true" />
      <created>1748415930442</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1748415930442</updated>
    </task>
    <task id="LOCAL-00046" summary="update user fields in firestore without overwriting full document&#10;- This function updates selected user details in Firestore such as name, avatar URL, metadata, role, and timestamp without deleting or replacing the full document.&#10;- Step-by-step breakdown of how it works:&#10;&#10;  1. The function is asynchronous and returns a Future, meaning it performs an operation that completes later.&#10;  2. It takes a user object of type types.User as an argument, which holds user information like name, avatar, and other metadata.&#10;  3. It calls getFirebaseFirestore() to obtain an instance of Firebase Firestore.&#10;  4. It accesses the specific Firestore collection where user documents are stored. This collection name comes from config.usersCollectionName.&#10;  5. Within that collection, it targets the specific document for the user using user.id as the document identifier.&#10;  6. It calls the update method, which only modifies specific fields provided in the map and preserves all other fields in the document.&#10;     - 'firstName': updates the user's first name to the new value.&#10;     - 'imageUrl': updates the profile image URL.&#10;     - 'lastName': updates the last name.&#10;     - 'metadata': updates any additional dynamic key-value pairs.&#10;     - 'role': calls toShortString() on the role object (if it's not null) to convert it to a string for storage.&#10;     - 'updatedAt': sets the update time to the current server timestamp using FieldValue.serverTimestamp().&#10;&#10;- This selective update ensures existing data in other fields of the document remains untouched.&#10;- The function is crucial for user profile edits, enabling partial updates instead of complete overwrites, reducing risks of data loss and minimizing unnecessary write costs.&#10;- By using serverTimestamp(), the function ensures consistent time recording based on the server's clock rather than client-side time, which can be unreliable or manipulated.">
      <option name="closed" value="true" />
      <created>1748423300842</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1748423300842</updated>
    </task>
    <task id="LOCAL-00047" summary="- code optimization code refractor">
      <option name="closed" value="true" />
      <created>1748423354892</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1748423354892</updated>
    </task>
    <task id="LOCAL-00048" summary="- profile page is added in chat application">
      <option name="closed" value="true" />
      <created>1748428069552</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1748428069552</updated>
    </task>
    <task id="LOCAL-00049" summary="- explore page is added">
      <option name="closed" value="true" />
      <created>1748508430934</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1748508430934</updated>
    </task>
    <task id="LOCAL-00050" summary="- now use can upload image in their text in explore tab">
      <option name="closed" value="true" />
      <created>1748604654280</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1748604654281</updated>
    </task>
    <task id="LOCAL-00051" summary="- login as sign-up flow is added">
      <option name="closed" value="true" />
      <created>1748621174124</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1748621174124</updated>
    </task>
    <task id="LOCAL-00052" summary="- freind request api and UI is added">
      <option name="closed" value="true" />
      <created>1748638258637</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1748638258637</updated>
    </task>
    <task id="LOCAL-00053" summary="- minor ui is updated">
      <option name="closed" value="true" />
      <created>1748677999295</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1748677999295</updated>
    </task>
    <task id="LOCAL-00054" summary="- minor ui is updated">
      <option name="closed" value="true" />
      <created>1748679585258</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1748679585259</updated>
    </task>
    <option name="localTasksCounter" value="55" />
    <servers />
  </component>
  <component name="ToolWindowManager">
    <editor active="true" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
    </layout>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="- removed extra packages" />
    <MESSAGE value="- login function is updated" />
    <MESSAGE value="- chat ui and code updated" />
    <MESSAGE value="- pillu user is added" />
    <MESSAGE value="- code refactor" />
    <MESSAGE value="- currently it stable and I can work with it now" />
    <MESSAGE value="- minor changes" />
    <MESSAGE value="- final chat changes" />
    <MESSAGE value="- minar async and await is added" />
    <MESSAGE value="- gitignore is updated" />
    <MESSAGE value="fix(auth): safely cache and stream chat user updates with cancellation&#10;&#10;- Added in-memory caching for Firebase chat user to reduce delay in user retrieval&#10;- Listens to Firebase stream and updates both stream controller and auth state&#10;- Ensured add calls are only made when BLoC and controller are open&#10;- Subscribed to Firebase stream in a cancellable way to avoid leaks or crashes&#10;- Cancelled Firebase stream in BLoC close to maintain stability and prevent Bad state errors" />
    <MESSAGE value="add validation and account creation logic with password match enforcement&#10;&#10;- What the function/code does in simple terms:&#10;  This code handles user input validation for password fields and triggers account creation only if validations pass. It ensures the password and confirm password fields match, and prevents the user from proceeding otherwise.&#10;&#10;- A detailed step-by-step explanation of how it works:&#10;  1. `_passwordValidation` checks whether the password field is empty. If so, it returns an error message to prompt user input.&#10;  2. `_confirmPasswordValidation` checks whether the `password` and `confirmPassword` fields match. If they don't, it returns an error message to inform the user.&#10;  3. `signUpLogin` is the main method invoked to initiate account creation.&#10;     - It first uses the provided `formKey` to validate all form fields via `formKey.currentState!.validate()`. This ensures all associated `TextFormField` validators (such as `_passwordValidation`) are executed.&#10;     - If any validation fails, it exits early and prevents further actions.&#10;     - It then performs a direct comparison between `password.text` and `confirmPassword.text` again to redundantly confirm they match, even if validation already covered it.&#10;     - If the two fields do not match, a `toast` notification and `alertDialog` are both shown to the user to indicate the mismatch, and the function exits early.&#10;     - If all checks pass, it proceeds to call `_createChatUserAccount`, passing along user details for registration.&#10;&#10;- Important behavior or considerations:&#10;  - Uses synchronous field validation and asynchronous flow control.&#10;  - Double-checks password match both in form validation and in logic, adding redundancy for safety.&#10;  - Prevents account creation unless every validation passes.&#10;  - Provides user feedback using both toast and alert dialog in case of mismatch.&#10;  - Relies on `FormState.validate()` to integrate custom field-level checks.&#10;&#10;- What does it do?&#10;  It acts as a guard layer that ensures user input integrity before creating an account.&#10;&#10;- How step-by-step?&#10;  By using a combination of inline validators and procedural logic after form validation.&#10;&#10;- How each mechanism works?&#10;  - `formKey.currentState!.validate()` scans all field validators and ensures they return null (meaning valid).&#10;  - Text fields use `TextEditingController.text` to access user input.&#10;  - Redundant comparison in `signUpLogin` ensures defense-in-depth for password correctness.&#10;  - `_createChatUserAccount` is only called if all validation logic passes.&#10;&#10;- Why this design?&#10;  This structure modularizes field-specific validations and separates input checking from account registration, improving maintainability and clarity.&#10;&#10;- Why not alternatives?&#10;  - Could combine password match check into one location instead of repeating.&#10;  - Could introduce a reusable validator widget for consistent password validation logic.&#10;  - Could use form-level validation callback instead of embedding logic in `signUpLogin`.&#10;&#10;- Why is the task needed?&#10;  User account creation workflows require strict validation to ensure security and data consistency.&#10;&#10;- Why is the domain valuable?&#10;  Secure authentication flows are critical to any app managing user identity or access.&#10;&#10;- Meta-why: why is computation structured this way?&#10;  Structured this way to ensure stepwise validation (early exits on failure), centralized flow control (`signUpLogin`), and reusable validators. This separation of concerns reduces cognitive load and minimizes side effects across unrelated operations.&#10;&#10;- Could be loop-based instead of recursive.&#10;  Not applicable; there’s no recursion here.&#10;&#10;- Could use memoization if performance is a concern.&#10;  Not needed due to trivial computational cost; these are basic synchronous checks.&#10;&#10;- Could use tail-recursion if language optimizes it.&#10;  Not relevant; no recursion involved in any part of the logic." />
    <MESSAGE value="- google firebase configuration is updated" />
    <MESSAGE value="add helper method to check if the given user is the message author&#10;&#10;- What the function/code does in simple terms:&#10;  Determines whether the provided user is the same as the message author.&#10;&#10;- How it works step-by-step:&#10;  1. Takes a user as input.&#10;  2. Compares the user's id with the message author's id.&#10;  3. Returns true if they match, false otherwise.&#10;&#10;- Could be loop-based instead of recursive:&#10;  Not applicable, this is a direct comparison.&#10;&#10;- Could use memoization if performance is a concern:&#10;  Unnecessary at this stage, as the check is simple and fast.&#10;&#10;- Could use tail-recursion if language optimizes it:&#10;  Not relevant; no recursion involved." />
    <MESSAGE value="- added comment for this _isCurrentAuth" />
    <MESSAGE value="- add slide and fade transition for route navigation using custom page builder&#10;&#10;- What the function/code does in simple terms.&#10;  This function creates a new page route with a custom transition animation where the new screen slides in from the right while simultaneously fading in. It pushes the given widget onto the navigation stack.&#10;&#10;- A detailed step-by-step explanation of how it works. the how? how? how? how?how meta why&#10;&#10;  1. The function is declared as asynchronous and returns a Future&lt;void&gt;, indicating that it performs asynchronous work (in this case, waiting for navigation) but does not return a result.&#10;  &#10;  2. It receives two parameters:&#10;     - context: a BuildContext used to access the Navigator&#10;     - widget: the destination screen to be pushed&#10;&#10;  3. The function uses Navigator.of(context).push(...) to initiate navigation to a new page. Instead of using standard routes like MaterialPageRoute, it uses PageRouteBuilder for custom transitions.&#10;&#10;  4. PageRouteBuilder has two key components:&#10;     - pageBuilder: this defines which widget should be displayed as the new page. Here, it simply returns the provided widget. This builder also accepts animation and secondaryAnimation, but they are not used here for modifying the widget directly.&#10;     - transitionsBuilder: this defines the visual transition that should occur when switching from one screen to another.&#10;&#10;  5. Inside the transitionsBuilder:&#10;     - A slide animation is created using Tween&lt;Offset&gt;. The Tween defines a movement from Offset(0.5, 0), which is halfway to the right of the screen (X=0.5), to Offset.zero, which means the final position (X=0). This gives the effect of the widget sliding in from the right.&#10;     - This tween is animated using CurvedAnimation to apply easing (Curves.easeOut), which causes the animation to start quickly and slow down toward the end, providing a more natural movement.&#10;     - The same primary animation is also used directly for fade (opacity), providing a smooth fade-in effect as the widget appears.&#10;&#10;  6. Both animations are combined:&#10;     - The SlideTransition wraps the child (destination widget), applying the horizontal slide.&#10;     - Inside the SlideTransition, a FadeTransition applies the opacity animation. This nesting means the widget slides in while fading in at the same time.&#10;&#10;- Any important behavior or considerations (e.g., error handling, performance).&#10;&#10;  - Since PageRouteBuilder is used directly, it provides fine-grained control over animation but requires manual configuration.&#10;  - No exception handling is included; if called from an invalid context (e.g., context not mounted), it could throw errors.&#10;  - Transition performance is generally efficient, but heavy widgets might cause frame drops without appropriate optimization.&#10;  - This custom transition enhances user experience by making page changes feel smooth and intentional.&#10;  - The animation is hardcoded (e.g., slide from the right); changing direction or style requires manually adjusting the tween and animation curves.&#10;&#10;- What does it do? → How step-by-step? → How each mechanism works? →&#10;  - It pushes a new page with a custom route.&#10;  - The custom route uses a slide and fade transition.&#10;  - The slide comes from the right (Offset(0.5, 0)) using Tween + CurvedAnimation.&#10;  - The fade uses the same animation for opacity.&#10;  - These are applied using SlideTransition and FadeTransition widgets.&#10;  - The result is a smooth animated page transition controlled via PageRouteBuilder." />
    <MESSAGE value="update user fields in firestore without overwriting full document&#10;- This function updates selected user details in Firestore such as name, avatar URL, metadata, role, and timestamp without deleting or replacing the full document.&#10;- Step-by-step breakdown of how it works:&#10;&#10;  1. The function is asynchronous and returns a Future, meaning it performs an operation that completes later.&#10;  2. It takes a user object of type types.User as an argument, which holds user information like name, avatar, and other metadata.&#10;  3. It calls getFirebaseFirestore() to obtain an instance of Firebase Firestore.&#10;  4. It accesses the specific Firestore collection where user documents are stored. This collection name comes from config.usersCollectionName.&#10;  5. Within that collection, it targets the specific document for the user using user.id as the document identifier.&#10;  6. It calls the update method, which only modifies specific fields provided in the map and preserves all other fields in the document.&#10;     - 'firstName': updates the user's first name to the new value.&#10;     - 'imageUrl': updates the profile image URL.&#10;     - 'lastName': updates the last name.&#10;     - 'metadata': updates any additional dynamic key-value pairs.&#10;     - 'role': calls toShortString() on the role object (if it's not null) to convert it to a string for storage.&#10;     - 'updatedAt': sets the update time to the current server timestamp using FieldValue.serverTimestamp().&#10;&#10;- This selective update ensures existing data in other fields of the document remains untouched.&#10;- The function is crucial for user profile edits, enabling partial updates instead of complete overwrites, reducing risks of data loss and minimizing unnecessary write costs.&#10;- By using serverTimestamp(), the function ensures consistent time recording based on the server's clock rather than client-side time, which can be unreliable or manipulated." />
    <MESSAGE value="- code optimization code refractor" />
    <MESSAGE value="- profile page is added in chat application" />
    <MESSAGE value="- explore page is added" />
    <MESSAGE value="- now use can upload image in their text in explore tab" />
    <MESSAGE value="- login as sign-up flow is added" />
    <MESSAGE value="- freind request api and UI is added" />
    <MESSAGE value="- minor ui is updated" />
    <option name="LAST_COMMIT_MESSAGE" value="- minor ui is updated" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="Dart">
          <url>file://$PROJECT_DIR$/lib/chat/widget/login_view_component.dart</url>
          <line>155</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="Dart">
          <url>file://$PROJECT_DIR$/lib/chat/widget/login_view_component.dart</url>
          <line>127</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="dart-exception" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>